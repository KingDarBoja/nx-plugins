import * as cdk from '@aws-cdk/core';
import * as s3deploy from '@aws-cdk/aws-s3-deployment';
import * as s3 from '@aws-cdk/aws-s3';
import { CloudFrontWebDistribution } from '@aws-cdk/aws-cloudfront';

export class S3CdkStack extends cdk.Stack {
  constructor(scope: cdk.Construct, id: string, props?: cdk.StackProps) {
    super(scope, id, props);

    const websiteBucket = new s3.Bucket(this, 'FlowAccountLandingBucket', {
      websiteIndexDocument: 'index.html',
      publicReadAccess: true
    });

    const s3deployObj = new s3deploy.BucketDeployment(this, 'DeployWebsite', {
      sources: [
        s3deploy.Source.asset('dist/static/frontend/flowaccount-landing/browser')
      ],
      destinationBucket: websiteBucket,
      //Invalidate the cache for / and index.html when we deploy so that cloudfront serves latest site
      distribution: distribution,
      distributionPaths: ['/', '/index.html']
    });

    new cdk.CfnOutput(this, 'URL', {
      description: 'The url of the website',
      value: distribution.domainName,
    });
  }
}

const app = new cdk.App();
new CdkStack(app, 'FlowAccountLanding');
app.synth();
