import * as path from 'path'
import { Construct, StackProps, Stack, Duration, Aws } from '@aws-cdk/core'
import { Function, Runtime, Code } from '@aws-cdk/aws-lambda';
import { RestApi, LambdaIntegration } from "@aws-cdk/aws-apigateway";

export class ServerlessExpressCdkStack extends Stack {

  _lamndaFunction: Function;
  _apiGateway: 
  constructor(scope: Construct, id: string, props?: StackProps) {
    super(scope, id, props);
    this.expressJsLambda();
  }
  expressJsLambda() {
    this._lamndaFunction = new Function(this, <string>process.env.LAMBDA_VPC_ATTACHMENT_FUNCTION_NAME, {
      functionName: <string>process.env.LAMBDA_VPC_ATTACHMENT_FUNCTION_NAME,
      code: Code.fromAsset(path.join(__dirname, 'dist/output')),
      description: "Web App Serverless Express Application",
      handler: 'index.lambda_handler',
      timeout: Duration.seconds(120),
      runtime: Runtime.NODEJS_12_X
    });
  }
  apiGateway() {
    const api = new RestApi(this, "widgets-api", {
      restApiName: "Widget Service",
      description: "This service serves widgets."
    });
    const getWidgetsIntegration = new LambdaIntegration(this._lamndaFunction, {
      requestTemplates: { "application/json": '{ "statusCode": "200" }' }
    });
  }
}